{"ast":null,"code":"import { all, call, put, takeLatest, fork, take } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { SIGNUP_REQUEST, SIGNUP_SUCCESS, SIGNUP_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE } from \"../reducer/user\";\n\nfunction signupAPI(data) {\n  return axios.post(\"/user/signup\", data);\n}\n\nfunction* signup(action) {\n  try {\n    const res = yield call(signupAPI, action.data);\n    console.log(res);\n    yield put({\n      type: SIGNUP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGNUP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loginAPI(data) {\n  return axios.post(\"http://localhost:3065/user/login\", data);\n}\n\nfunction* login(action) {\n  try {\n    const res = yield call(loginAPI, action.data);\n    console.log(res);\n    yield put({\n      type: LOGIN_SUCCESS,\n      data: res.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOGIN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* signUp() {\n  yield takeLatest(SIGNUP_REQUEST, signup);\n}\n\nfunction* logIn() {\n  yield takeLatest(LOGIN_REQUEST, login);\n}\n\nexport default function* userSaga() {\n  yield all([fork(signUp), fork(logIn)]);\n}","map":{"version":3,"sources":["/Users/ljh/Desktop/soloProject/community/src/sagas/user.js"],"names":["all","call","put","takeLatest","fork","take","axios","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","signupAPI","data","post","signup","action","res","console","log","type","err","error","response","loginAPI","login","signUp","logIn","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,IAArC,EAA2CC,IAA3C,QAAuD,oBAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,aALF,EAMEC,aANF,QAOO,iBAPP;;AASA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,SAAOR,KAAK,CAACS,IAAN,CAAW,cAAX,EAA2BD,IAA3B,CAAP;AACD;;AACD,UAAUE,MAAV,CAAiBC,MAAjB,EAAyB;AACvB,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMjB,IAAI,CAACY,SAAD,EAAYI,MAAM,CAACH,IAAnB,CAAtB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,UAAMhB,GAAG,CAAC;AACRmB,MAAAA,IAAI,EAAEb;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOc,GAAP,EAAY;AACZH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACA,UAAMpB,GAAG,CAAC;AACRmB,MAAAA,IAAI,EAAEZ,cADE;AAERc,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaV;AAFZ,KAAD,CAAT;AAID;AACF;;AACD,SAASW,QAAT,CAAkBX,IAAlB,EAAwB;AACtB,SAAOR,KAAK,CAACS,IAAN,CAAW,kCAAX,EAA+CD,IAA/C,CAAP;AACD;;AACD,UAAUY,KAAV,CAAgBT,MAAhB,EAAwB;AACtB,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMjB,IAAI,CAACwB,QAAD,EAAWR,MAAM,CAACH,IAAlB,CAAtB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,UAAMhB,GAAG,CAAC;AACRmB,MAAAA,IAAI,EAAEV,aADE;AAERG,MAAAA,IAAI,EAAEI,GAAG,CAACJ;AAFF,KAAD,CAAT;AAID,GAPD,CAOE,OAAOQ,GAAP,EAAY;AACZH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACA,UAAMpB,GAAG,CAAC;AACRmB,MAAAA,IAAI,EAAET,aADE;AAERW,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaV;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUa,MAAV,GAAmB;AACjB,QAAMxB,UAAU,CAACI,cAAD,EAAiBS,MAAjB,CAAhB;AACD;;AACD,UAAUY,KAAV,GAAkB;AAChB,QAAMzB,UAAU,CAACO,aAAD,EAAgBgB,KAAhB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAM7B,GAAG,CAAC,CAACI,IAAI,CAACuB,MAAD,CAAL,EAAevB,IAAI,CAACwB,KAAD,CAAnB,CAAD,CAAT;AACD","sourcesContent":["import { all, call, put, takeLatest, fork, take } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  SIGNUP_REQUEST,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n} from \"../reducer/user\";\n\nfunction signupAPI(data) {\n  return axios.post(\"/user/signup\", data);\n}\nfunction* signup(action) {\n  try {\n    const res = yield call(signupAPI, action.data);\n    console.log(res);\n    yield put({\n      type: SIGNUP_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGNUP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\nfunction loginAPI(data) {\n  return axios.post(\"http://localhost:3065/user/login\", data);\n}\nfunction* login(action) {\n  try {\n    const res = yield call(loginAPI, action.data);\n    console.log(res);\n    yield put({\n      type: LOGIN_SUCCESS,\n      data: res.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOGIN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* signUp() {\n  yield takeLatest(SIGNUP_REQUEST, signup);\n}\nfunction* logIn() {\n  yield takeLatest(LOGIN_REQUEST, login);\n}\n\nexport default function* userSaga() {\n  yield all([fork(signUp), fork(logIn)]);\n}\n"]},"metadata":{},"sourceType":"module"}