{"ast":null,"code":"import { all, call, put, takeLatest, fork } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { SIGNUP_REQUEST, SIGNUP_SUCCESS, SIGNUP_FAILURE } from \"../reducer/user\";\n\nfunction signupAPI(data) {\n  return axios.post(\"http://localhost:3065/user/signup\", data);\n}\n\nfunction* signup(action) {\n  try {\n    const res = yield call(signupAPI, action.data);\n    console.log(res);\n    yield put({\n      type: SIGNUP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGNUP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* signUp() {\n  yield takeLatest(SIGNUP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([fork(signUp)]);\n}","map":{"version":3,"sources":["/Users/ljh/Desktop/soloProject/community/src/sagas/user.js"],"names":["all","call","put","takeLatest","fork","axios","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","signupAPI","data","post","signup","action","res","console","log","type","err","error","response","signUp","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,IAArC,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,cAHF,QAIO,iBAJP;;AAMA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,SAAOL,KAAK,CAACM,IAAN,CAAW,mCAAX,EAAgDD,IAAhD,CAAP;AACD;;AACD,UAAUE,MAAV,CAAiBC,MAAjB,EAAyB;AACvB,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMb,IAAI,CAACQ,SAAD,EAAYI,MAAM,CAACH,IAAnB,CAAtB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,UAAMZ,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEV;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOW,GAAP,EAAY;AACZH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACA,UAAMhB,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAET,cADE;AAERW,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaV;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUW,MAAV,GAAmB;AACjB,QAAMlB,UAAU,CAACG,cAAD,EAAiBM,MAAjB,CAAhB;AACD;;AAED,eAAe,UAAUU,QAAV,GAAqB;AAClC,QAAMtB,GAAG,CAAC,CAACI,IAAI,CAACiB,MAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, call, put, takeLatest, fork } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  SIGNUP_REQUEST,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAILURE,\n} from \"../reducer/user\";\n\nfunction signupAPI(data) {\n  return axios.post(\"http://localhost:3065/user/signup\", data);\n}\nfunction* signup(action) {\n  try {\n    const res = yield call(signupAPI, action.data);\n    console.log(res);\n    yield put({\n      type: SIGNUP_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGNUP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* signUp() {\n  yield takeLatest(SIGNUP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([fork(signUp)]);\n}\n"]},"metadata":{},"sourceType":"module"}