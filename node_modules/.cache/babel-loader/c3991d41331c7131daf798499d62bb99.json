{"ast":null,"code":"var _jsxFileName = \"/Users/ljh/Desktop/soloProject/community/src/pages/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { signupReq } from \"../reducer/user\";\nimport \"./SignUp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    signupDone\n  } = useSelector(state => state.user);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  useEffect(() => {\n    // 회원가입 성공 시\n    if (signupDone) {\n      alert(\"회원가입에 성공했습니다\");\n      navigate(\"/\");\n    }\n\n    if (signupDone) {\n      alert(\"이미 사용중인 아이디 입니다\");\n    }\n  }, [signupDone]);\n  const onChangeEmail = useCallback(e => {\n    setEmail(e.target.value);\n  }, []);\n  const onChangePassword = useCallback(e => {\n    setPassword(e.target.value);\n  }, []);\n  const onChangeNickname = useCallback(e => {\n    setNickname(e.target.value);\n  }, []);\n  const onSubmitForm = useCallback(() => {\n    const formData = {\n      email,\n      password,\n      nickname\n    };\n    dispatch(signupReq(formData));\n  }, [email, password, nickname]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"signUpForm\",\n    onSubmit: onSubmitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"\\uC774\\uBA54\\uC77C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: onChangeEmail,\n      className: \"input_signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: onChangePassword,\n      className: \"input_signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"\\uB2C9\\uB124\\uC784\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"nickname\",\n      name: \"nickname\",\n      value: nickname,\n      onChange: onChangeNickname,\n      className: \"input_signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"signUpBtn\",\n      onSubmit: onSubmitForm,\n      children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"r2rQqDfEDyNhJWeU4BltjWgVHQk=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/ljh/Desktop/soloProject/community/src/pages/SignUp.js"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","useNavigate","signupReq","Register","navigate","dispatch","signupDone","state","user","email","setEmail","password","setPassword","nickname","setNickname","alert","onChangeEmail","e","target","value","onChangePassword","onChangeNickname","onSubmitForm","formData"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { signupReq } from \"../reducer/user\";\nimport \"./SignUp.css\";\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { signupDone } = useSelector((state) => state.user);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n\n  useEffect(() => {\n    // 회원가입 성공 시\n    if (signupDone) {\n      alert(\"회원가입에 성공했습니다\");\n      navigate(\"/\");\n    }\n    if (signupDone) {\n      alert(\"이미 사용중인 아이디 입니다\");\n    }\n  }, [signupDone]);\n\n  const onChangeEmail = useCallback((e) => {\n    setEmail(e.target.value);\n  }, []);\n\n  const onChangePassword = useCallback((e) => {\n    setPassword(e.target.value);\n  }, []);\n\n  const onChangeNickname = useCallback((e) => {\n    setNickname(e.target.value);\n  }, []);\n\n  const onSubmitForm = useCallback(() => {\n    const formData = { email, password, nickname };\n    dispatch(signupReq(formData));\n  }, [email, password, nickname]);\n\n  return (\n    <form className=\"signUpForm\" onSubmit={onSubmitForm}>\n      <label>이메일</label>\n      <input\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={onChangeEmail}\n        className=\"input_signup\"\n      />\n      <label>비밀번호</label>\n      <input\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={onChangePassword}\n        className=\"input_signup\"\n      />\n      <label>닉네임</label>\n      <input\n        type=\"nickname\"\n        name=\"nickname\"\n        value={nickname}\n        onChange={onChangeNickname}\n        className=\"input_signup\"\n      />\n      <button type=\"submit\" className=\"signUpBtn\" onSubmit={onSubmitForm}>\n        가입하기\n      </button>\n    </form>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}