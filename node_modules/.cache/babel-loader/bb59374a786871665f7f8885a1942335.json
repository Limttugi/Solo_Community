{"ast":null,"code":"import axios from \"axios\";\nconst initialState = {\n  signupLoading: false,\n  signupDone: false,\n  signupError: null,\n  isLoggedIn: false,\n  myInfo: null\n};\nconst SIGNUP_REQUEST = \"SIGNUP_REQUEST\";\nconst SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\nconst SINGUP_FAILURE = \"SIGNUP_FAILURE\";\n\nconst signupAPI = async formData => {\n  return await axios.post(\"http://localhost:3065/user/signup\", formData);\n};\n\nexport const signupReq = formData => async dispatch => {\n  dispatch({\n    type: SIGNUP_REQUEST\n  });\n\n  try {\n    const res = await signupAPI(formData);\n    console.log(res);\n    dispatch({\n      type: SIGNUP_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: SINGUP_FAILURE,\n      error: err\n    });\n  }\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SIGNUP_REQUEST:\n      return { ...state,\n        signupLoading: true,\n        signupDone: false,\n        signupError: null\n      };\n\n    case SIGNUP_SUCCESS:\n      return { ...state,\n        signupLoading: false,\n        signupDone: true\n      };\n\n    case SINGUP_FAILURE:\n      return { ...state,\n        signupLoading: false,\n        signupError: action.error\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ljh/Desktop/soloProject/community/src/reducer/user.js"],"names":["axios","initialState","signupLoading","signupDone","signupError","isLoggedIn","myInfo","SIGNUP_REQUEST","SIGNUP_SUCCESS","SINGUP_FAILURE","signupAPI","formData","post","signupReq","dispatch","type","res","console","log","err","error","reducer","state","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,WAAW,EAAE,IAHM;AAInBC,EAAAA,UAAU,EAAE,KAJO;AAKnBC,EAAAA,MAAM,EAAE;AALW,CAArB;AAQA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,cAAc,GAAG,gBAAvB;;AAEA,MAAMC,SAAS,GAAG,MAAOC,QAAP,IAAoB;AACpC,SAAO,MAAMX,KAAK,CAACY,IAAN,CAAW,mCAAX,EAAgDD,QAAhD,CAAb;AACD,CAFD;;AAIA,OAAO,MAAME,SAAS,GAAIF,QAAD,IAAc,MAAOG,QAAP,IAAoB;AACzDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAMS,GAAG,GAAG,MAAMN,SAAS,CAACC,QAAD,CAA3B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAF,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP;AADC,KAAD,CAAR;AAGD,GAND,CAME,OAAOW,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,cADC;AAEPW,MAAAA,KAAK,EAAED;AAFA,KAAD,CAAR;AAID;AACF,CAdM;AAgBP,eAAe,SAASE,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBrB,YAAsB;AAAA,MAARsB,MAAQ;;AAC5D,UAAQA,MAAM,CAACR,IAAf;AACE,SAAKR,cAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELpB,QAAAA,aAAa,EAAE,IAFV;AAGLC,QAAAA,UAAU,EAAE,KAHP;AAILC,QAAAA,WAAW,EAAE;AAJR,OAAP;;AAMF,SAAKI,cAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELpB,QAAAA,aAAa,EAAE,KAFV;AAGLC,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAKF,SAAKM,cAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELpB,QAAAA,aAAa,EAAE,KAFV;AAGLE,QAAAA,WAAW,EAAEmB,MAAM,CAACH;AAHf,OAAP;;AAKF;AACE,aAAOE,KAAP;AArBJ;AAuBD","sourcesContent":["import axios from \"axios\";\n\nconst initialState = {\n  signupLoading: false,\n  signupDone: false,\n  signupError: null,\n  isLoggedIn: false,\n  myInfo: null,\n};\n\nconst SIGNUP_REQUEST = \"SIGNUP_REQUEST\";\nconst SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\nconst SINGUP_FAILURE = \"SIGNUP_FAILURE\";\n\nconst signupAPI = async (formData) => {\n  return await axios.post(\"http://localhost:3065/user/signup\", formData);\n};\n\nexport const signupReq = (formData) => async (dispatch) => {\n  dispatch({ type: SIGNUP_REQUEST });\n  try {\n    const res = await signupAPI(formData);\n    console.log(res);\n    dispatch({\n      type: SIGNUP_SUCCESS,\n    });\n  } catch (err) {\n    dispatch({\n      type: SINGUP_FAILURE,\n      error: err,\n    });\n  }\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SIGNUP_REQUEST:\n      return {\n        ...state,\n        signupLoading: true,\n        signupDone: false,\n        signupError: null,\n      };\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        signupLoading: false,\n        signupDone: true,\n      };\n    case SINGUP_FAILURE:\n      return {\n        ...state,\n        signupLoading: false,\n        signupError: action.error,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}